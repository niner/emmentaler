#!/usr/bin/env perl6
use Panda;
use Shell::Command;
use JSON::Tiny;

sub MAIN ($projectsfile) {
    try mkdir "installlib";
    CompUnit::RepositoryRegistry.use-repository(
        CompUnit::Repository::FileSystem.new(:prefix("{$*CWD}/installlib/lib"))
    );
    %*ENV<PERL6LIB> = "{$*CWD}/installlib/lib:" ~ (%*ENV<PERL6LIB> // '');
    try unlink "{$*CWD}/state";
    my $e = Panda::Ecosystem.new(
        statefile    => "{$*CWD}/state".IO,
        projectsfile => $projectsfile,
    ) but role {
        method flush-states { }
    };
    my $panda = Panda.new(
        ecosystem => $e,
        installer => Panda::Installer.new(prefix => "{$*CWD}/installlib")
    );

    my %log;

    my $start = time;

    for $panda.ecosystem.project-list -> $p {
        unlink('install-dist.out'); # in case there's a stale one
        my $proc = run('perl6', 'install-dist-to-installlib', $projectsfile, $p.Str);
        my $output = slurp('install-dist.out');
        unlink('install-dist.out');
        %log{$p} = from-json($output);
    }

    my $end = time;

    %log<_statistics> = {
        runtime  => $end - $start,
        compiler => $*PERL.compiler.name,
        version  => $*PERL.compiler.version.Str,
        datetime => DateTime.new(now).Str
    }

    shell 'rm -rf installlib/';

    given open('results.json', :w) {
        .say: to-json %log;
        .close;
    }

    say '';
    say 'Smoke test results have been written to results.json';
    say '====================================================';
}
